sudo: required
dist: trusty
os: linux
language: minimal
if: tag IS blank

services:
  - docker

addons:
  apt:
    packages:
    - curl
    - git
    - python3
    
cache:
  directories:
  - depends/built
  - depends/x86_64-pc-linux-gnu
  - depends/x86_64-w64-mingw32
  - depends/i686-w64-mingw32
  - depends/sdk-sources
  - "$HOME/.ccache"
env:
  global:
  - MAKEJOBS=-j3
  - RUN_TESTS=false
  - CHECK_DOC=0
  - CHECK_LOGPRINT=0
  - BOOST_TEST_RANDOM=1$TRAVIS_BUILD_ID
  - CCACHE_SIZE=100M
  - CCACHE_TEMPDIR=/tmp/.ccache-temp
  - CCACHE_COMPRESS=1
  - BASE_OUTDIR=/build/out
  - SDK_URL=https://bitcoincore.org/depends-sources/sdks
  - WINEDEBUG=fixme-all
  matrix:
  - HOST=x86_64-pc-linux-gnu BITCOIN_CONFIG="--enable-glibc-back-compat LDFLAGS="-static-libstdc++"
  - HOST=x86_64-w64-mingw32 DPKG_ADD_ARCH="i386" BITCOIN_CONFIG="--enable-reduce-exports"
  - HOST=i686-w64-mingw32 DPKG_ADD_ARCH="i386" BITCOIN_CONFIG="--enable-reduce-exports"
   
before_install:
  - DOCKER_ID=`docker run -d -e "HOST=$HOST" -e "BINCOIN_CONFIG=$BITCOIN_CONFIG" -v $PWD:/build ccob/cryptobuild:latest`
  
before_script:
- if [ "$CHECK_DOC" = 1 ]; then contrib/devtools/check-doc.py; fi
- if [ "$CHECK_LOGPRINT" = 1 ]; then contrib/devtools/logprint-scanner.py; fi
- unset CC; unset CXX
- mkdir -p depends/SDKs depends/sdk-sources
- if [ -n "$OSX_SDK" -a ! -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then
  curl --location --fail $SDK_URL/MacOSX${OSX_SDK}.sdk.tar.gz -o depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz;
  fi
- if [ -n "$OSX_SDK" -a -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then
  tar -C depends/SDKs -xf depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz; fi
- docker exec $DOCKER_ID make $MAKEJOBS -C depends $DEP_OPTS
  
script:
- export TRAVIS_COMMIT_LOG=`git log --format=fuller -1`
- if [ -n "$USE_SHELL" ]; then export CONFIG_SHELL="$USE_SHELL"; fi
- OUTDIR=$BASE_OUTDIR/$HOST
- BITCOIN_CONFIG_ALL="--disable-dependency-tracking --prefix=/build/depends/$HOST --bindir=$OUTDIR --libdir=$OUTDIR"
- depends/$HOST/native/bin/ccache --max-size=$CCACHE_SIZE
- test -n "$USE_SHELL" && eval '"$USE_SHELL" -c "./autogen.sh"' || ./autogen.sh
- docker exec $DOCKER_ID ./configure --cache-file=config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG
- docker exec $DOCKER_ID make distdir PACKAGE=bitcoin VERSION=$HOST
- docker exec $DOCKER_ID bash -c "cd bitcoin-$HOST; ./configure --cache-file=../config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG"
- docker exec $DOCKER_ID make $MAKEJOBS install
- docker exec $DOCKER_ID tar -zcvf $HOST.tar.gz $OUTDIR
- export LD_LIBRARY_PATH=$TRAVIS_BUILD_DIR/depends/$HOST/lib
- if [ "$RUN_TESTS" = "true" ]; then travis_wait 30 make $MAKEJOBS check VERBOSE=1;
  fi
  
after_script:
- echo $TRAVIS_COMMIT_RANGE
- echo $TRAVIS_COMMIT_LOG

deploy:
  provider: releases
  skip_cleanup: true
  file_glob: true
  draft: true
  name: $TRAVIS_BRANCH 
  target_commitish: $TRAVIS_COMMIT
  overwrite: true  
  api_key:
    secure: B+KCKtU9vSQcNbZPgCewM43ABvQK/VcrYGasuzyF3hKxlSU68iR0Dw4Q+ScDCtXJw9eQ9C/yXBHwzaee21ucarQdQq6u8OhLYnmWmGy0xb0lEvDoVuBjpfTgMfvy3ZaxLrS7tYGFpDpmhD9802D3SChWy2Y0MUHsBbos8cfFLHzBkTBjlb07tTYaUZFbduIUKgvTQv5wczGDLpMqp/uK92RRErJHehvpJjRnzIGpRiPs9+1ziSk9rLuZweejnNUtQ6HpW6RQYDXQo8fHk1jd6Y9I5a+ajrQwNbsFUAwyhAnl1FS4avX49T5hzAt/EH9X0pT6pM97CW/D4K6nurH2tnUyHde79lzmaanyyhfEvt6Lycj3Angjk+od8rJCuDGsIeF4GsD+nH4G54WuqiaSRhGGG7t0qWqQN6HsGJtPPx7697sC3vAE5UpQ8v/YeDirAjCo0nvgvwZvdXPYkKYCRqPVmXbppffIiwDXgrnBz1sGjTGbC5YCIeIczAfnwfPspc5GYsQN7rZJEnSfGlcT9iscqi6rLlXDRgsl7Ny8eHa+d7dOY9QYC9xTZFILlfSGgFGjMej25uc9DKsiWs3j08vXTFKLoVzlOCbmcSS1teb8XnnYDB/c2kz1PZUTF9eLdbpDd1Of2iwth+fg8DoMEQU0KkuVLXimFzD+sa1yuHc=
  file: "*.tar.gz"
  on:
    repo: CCob/blocknode
    all_branches: true
